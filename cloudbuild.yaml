steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--no-cache'
      - '-t'
      - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '.'
      - '-f'
      - 'Dockerfile'
    id: Build
 
  # Step 2: Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push
 
  # Step 3: Deploy to Cloud Run with custom service account and port 5000
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - 'run'
      - 'services'
      - 'update'
      - '$_SERVICE_NAME'
      - '--platform=managed'
      - '--image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID'
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
      - '--service-account=bdm-chatbot-test@temp-bq-project.iam.gserviceaccount.com'  # Custom service account
    #  - '--set-env-vars=GROQ_API_KEY=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, base_url=http://localhost:5000/'
      - '--timeout=2400'
    id: Deploy
    entrypoint: 'gcloud'
 
# Define images produced by this build
images:
  - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
 
# Options
options:
  substitutionOption: 'ALLOW_LOOSE'
  logging: 'CLOUD_LOGGING_ONLY'
 
# Substitutions (variables)
substitutions:
  _DEPLOY_REGION: 'asia-south1'
  _AR_HOSTNAME: 'asia-south1-docker.pkg.dev'
  _TRIGGER_ID: 'c6677df9-c1ea-4937-a0e6-254ec2cf5fdf'
  _PLATFORM: 'managed'
  _SERVICE_NAME: 'dev-bdm-cr-chatbot'
 
# Tags for tracking
tags:
  - 'gcp-cloud-build-deploy-cloud-run'
  - 'gcp-cloud-build-deploy-cloud-run-managed'
  - 'dev-bdm-cr-chatbot'